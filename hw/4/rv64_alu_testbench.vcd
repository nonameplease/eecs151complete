$date
	Fri Oct  4 17:02:32 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module rv64_alu_testbench $end
$var wire 64 ! c [63:0] $end
$var reg 64 " a [63:0] $end
$var reg 64 # b [63:0] $end
$var reg 3 $ op [2:0] $end
$scope module dut $end
$var wire 64 % a [63:0] $end
$var wire 64 & b [63:0] $end
$var wire 64 ' c [63:0] $end
$var wire 3 ( op [2:0] $end
$var reg 64 ) out [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#100
b1100010000000000000000000000000000 !
b1100010000000000000000000000000000 '
b1100010000000000000000000000000000 )
b100000000000000000000000000000000 #
b100000000000000000000000000000000 &
b1000010000000000000000000000000000 "
b1000010000000000000000000000000000 %
#200
b10000000000000000000000000000 !
b10000000000000000000000000000 '
b10000000000000000000000000000 )
b1 $
b1 (
#300
b100010000000000000000000000000000 !
b100010000000000000000000000000000 '
b100010000000000000000000000000000 )
b10 $
b10 (
#400
b10000000000000000000000000000 !
b10000000000000000000000000000 '
b10000000000000000000000000000 )
b11 $
b11 (
#500
b1000010000000000000000000000000000 !
b1000010000000000000000000000000000 '
b1000010000000000000000000000000000 )
b100 $
b100 (
#600
b10000000000000000000000000000 !
b10000000000000000000000000000 '
b10000000000000000000000000000 )
b101 $
b101 (
#700
b1000010000000000000000000000000000 !
b1000010000000000000000000000000000 '
b1000010000000000000000000000000000 )
b110 $
b110 (
#800
b111 $
b111 (
#900
b1100010000000000000000000000000000 !
b1100010000000000000000000000000000 '
b1100010000000000000000000000000000 )
b0 $
b0 (
